apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '0.0.1'

def mainClassName = 'gui.jfx.Main'
def defaultEncoding = 'UTF-8'
def jdkVersion = '1.8'
def javafxHome = System.getenv('JAVA_HOME')
def antJavafxJar = 'build/classes/ant-javafx'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
	mavenCentral()
}

buildscript {
    repositories {
		mavenCentral()
	}
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

//this one works with file dependencies. If you prefer

configurations {
    //we do not want to have jfxrt.jar in the classpath when creating the jar,
    //therefore a seperate configuration is required
    providedCompile
}

dependencies {
    providedCompile files("${javafxHome}/jre/lib/ext/jfxrt.jar")
    compile 'org.apache.commons:commons-lang3:3.4'

    testCompile 'junit:junit:4.11'
}
compileJava {
    //add required JavaFX libs to compile classpath
    sourceSets.main.compileClasspath += configurations.providedCompile
    sourceSets.main.compileClasspath += configurations.runtime
    sourceSets.main.compileClasspath += configurations.testCompile
}

run {
    //add required JavaFX libs to runtime classpath
    classpath += configurations.providedCompile
    classpath += configurations.runtime
}
eclipse {
    classpath.defaultOutputDir = file('build')
}

//create some smarter looking start scripts
startScripts {
    doLast {
        unixScript.text = "java -jar ../libs/$jar.archiveName"
        windowsScript.text = "java -jar ..\\libs\\$jar.archiveName"
    }
}
